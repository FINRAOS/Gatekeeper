#
#  Copyright 2018. Gatekeeper Contributors
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#Global stuff, Most of this stuff should be set with container profile
server.servlet.context-path: /api/gatekeeper-ec2
gatekeeper:
  aws:
    proxyHost: unset
    proxyPort: unset
    sessionTimeout: 3480000
    sessionTimeoutPad: 120000

  appIdentityTag: APP

  email:
    from: Gatekeeper@company.com
    team: DL-OPS@company.com
    approverEmails: DL-OPS@company.com
    opsEmails: DL-OPS@company.com

  auth:
    userIdHeader: default
    approverGroup: DEFAULT_APPROVER
    supportGroup: DEFAULT_SUPPORT
  db:
    sslParams: ssl=true&sslmode=${gatekeeper.db.sslMode}&sslrootcert=${gatekeeper.db.sslCert}

  approval-threshold:
    dev:
      dev: 48
      qa: 48
      prod: -1
    support:
      dev: 48
      qa: 48
      prod: 2

  ssm:
    linux:
      create:
        documentName: GK-Create
        timeout: 2000
        waitInterval: 1000
      delete:
        documentName: GK-Delete
        timeout: 2000
        waitInterval: 1000
    windows:
      create:
        documentName: GK-WN-Create
        timeout: 45000
        waitInterval: 1000
      delete:
        documentName: GK-WN-Delete
        timeout: 2000
        waitInterval: 1000

  accountInfoEndpoint: account-info.mycompany.com
  accountInfoUri: accounts




spring:
  activiti:
    asyncExecutorEnabled: true
    jobExecutorActivate: true
    databaseSchemaUpdate: true
    databaseSchema: gatekeeper_ec2



  profiles.active: local

  mail:
    host: localhost
    port: 25

server:
  tomcat:
    max-http-header-size: 32768

cloud:
  aws:
    region: us-west-2

log:
  filename: application.log

---

spring:
  profiles: unit-test
  mail:
    host: localhost
    port: 8007
    from: UNIT_TEST@company.com
    team: DL-UNIT_TEAM@company.com

---

spring:
  profiles: container

  ldap:
    contextSource:
      url: ${gatekeeper.auth.ldap.server}
      userDn: ${gatekeeper.auth.ldap.userDn}
      base: ${gatekeeper.auth.ldap.base}
      password: ${gatekeeper.auth.ldap.userPassword}
  mail:
    host: ${gatekeeper.email.host}
    port: ${gatekeeper.email.port}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate.default_schema: ${gatekeeper.db.schema}
    generate-ddl: false
    show-sql: false

  activiti:
    databaseSchemaUpdate: true
    databaseSchema: ${gatekeeper.db.schema}

  datasource:
    platform: postgres
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${gatekeeper.db.url}:${gatekeeper.db.port}/${gatekeeper.db.database}?ApplicationName=GatekeeperEC2&currentSchema=${gatekeeper.db.schema}&${gatekeeper.db.sslParams}
    username: ${gatekeeper.db.user}
    password: ${gatekeeper.db.password}
    max-idle: 2
    min-idle: 2
